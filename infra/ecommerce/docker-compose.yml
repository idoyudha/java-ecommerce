networks:
  ecommerce:
    driver: bridge

volumes:
  postgres-data:
  zookeeper-data:
  zookeeper-log:
  kafka-broker-1-data:
  kafka-broker-2-data:
  kafka-broker-3-data:
  kafka-manager-data:

services:
  postgres:
    image: postgres:17-alpine
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - "postgres-data:/var/lib/postgresql/data"
    networks:
      - ${GLOBAL_NETWORK}

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}:${KAFKA_VERSION}
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    volumes:
      - "zookeeper-data:/var/lib/zookeeper/data"
      - "zookeeper-log:/var/lib/zookeeper/log"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  schema-registry:
    image: ${KAFKA_IMAGE}:${KAFKA_VERSION}
    hostname: schema-registry
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      KAFKA_SKIP_PREFLIGHT_CHECKS: true
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://schema-registry:8081
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-1:
    image: ${KAFKA_IMAGE}:${KAFKA_VERSION}
    hostname: kafka-broker-1
    depends_on:
      - zookeeper
    ports:
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-1:9092,LISTENER_LOCAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_SKIP_PREFLIGHT_CHECKS: true
    volumes:
      - "kafka-broker-1-data:/var/lib/kafka/data"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-2:
    image: ${KAFKA_IMAGE}:${KAFKA_VERSION}
    hostname: kafka-broker-2
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_SKIP_PREFLIGHT_CHECKS: true
    volumes:
      - "kafka-broker-2-data:/var/lib/kafka/data"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-broker-3:
    image: ${KAFKA_IMAGE}:${KAFKA_VERSION}
    hostname: kafka-broker-3
    depends_on:
      - zookeeper
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker-3:9092,LISTENER_LOCAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_COMPRESSION_TYPE: producer
      KAFKA_SKIP_PREFLIGHT_CHECKS: true
    volumes:
      - "kafka-broker-3-data:/var/lib/kafka/data"
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  kafka-manager:
    image: hlebalbau/kafka-manager:stable
    hostname: kafka-manager
    restart: always
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  init-kafka:
    image: ${KAFKA_IMAGE}:${KAFKA_VERSION}
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # block until kafka is reachable
      kafka-topics --bootstrap-server kafka-broker-1:9092 --list

      echo -e 'Deleting kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic payment_created --delete --if-exists
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic payment_updated --delete --if-exists

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic notification --create --if-not-exists --topic payment_created --replication-factor 3 --partitions 3
      kafka-topics --bootstrap-server kafka-broker-1:9092 --topic notification --create --if-not-exists --topic payment_updated --replication-factor 3 --partitions 3
      "
    networks:
      - ${GLOBAL_NETWORK:-kafka}